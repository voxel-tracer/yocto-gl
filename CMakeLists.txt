cmake_minimum_required (VERSION 3.12)

project (yocto_gl VERSION 4.0)

option(YOCTO_OPENGL "Build OpenGL apps" ON)
option(YOCTO_APPS "Build apps" ON)
option(YOCTO_DENOISE "Build denoise app based on Intel OIDN" OFF)
option(YOCTO_EMBREE "Use Intel's Embree raytracer" OFF)
option(YOCTO_TESTING "Enable testing" ON)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE "RelWithDebInfo")
endif()

#set(PROJECT_BINARY_DIR ${PROJECT_SOURCE_DIR}/bin)
if(NOT GENERATOR_IS_MULTI_CONFIG AND CMAKE_BUILD_TYPE MATCHES Debug)
  set(PROEJCT_BINARY_DIR ${PROJECT_BINARY_DIR}/debug)
endif(NOT GENERATOR_IS_MULTI_CONFIG AND CMAKE_BUILD_TYPE MATCHES Debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
if(GENERATOR_IS_MULTI_CONFIG)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR})
endif(GENERATOR_IS_MULTI_CONFIG)

#message("PROJECT_SOURCE_DIR = ${PROJECT_SOURCE_DIR}")
#message("PROJECT_BINARY_DIR = ${PROJECT_BINARY_DIR}")

add_subdirectory(exts)
add_subdirectory(libs)
if(YOCTO_APPS)
add_subdirectory(apps)
endif()
